qarv - a Qt interface to Aravis
===============================

DESCRIPTION
-----------

qarv provides a graphical user interface to GeniCam ethernet cameras
via the Aravis library. It allows viewing the video and recording it
in either the original or AVI formats. OpenGL is used for video
display. The network interface used by the camera is automatically
detected and camera's packet size is set to match the interface MTU,
providing usable (hopefully) performance with minimal interaction,
unlike the default settings on some cameras. Basic controls, such as
frames-per-second, pixel format and exposure/gain are
provided. Region-of-interest can be selected via manual entry or by
drawing it directly in the video display. Full access to all camera
features is available in a tree view.

For a programmer, qarv provides the QArvCamera and QArvCameraId
classes which isolate the Qt program from Aravis internals, thus
avoiding clashes between Qt and Glib/GTK. The QArvCamera class
implements the QAbstractItemModel interface. This interface allows
direct access to camera features using Qt's Model/View paradigm. The
QArvCamera model can thus be plugged directly into a "view" widget, as
is done in our GUI. An implementation of QStyledItemDelegate is also
provided; it generates widgets that can be used to edit Aravis feature
nodes.

The camera control GUI itself is meant to be embedded in another
application. In this mode, it does not support recording into a file,
but instead generates signals to notify the host application of new
frames.

Both the core camera classes and the embeddable GUI class are provided
in the form of a library.

Homepage: http://gitorious.org/adv-staging/qarv
Aravis: https://live.gnome.org/Aravis


REQUIREMENTS AND INSTALLATION
-----------------------------

qarv requires Qt-4.8, aravis-0.2 and libswscale. It can use the ffmpeg
command (if present) to record AVIs, but it is not necessary for
recording raw data.

qarv is built using CMake with no special configuration
options. If you are not familiar with CMake, refer to any
tutorial. But for starters, run these commands from the qarv
directory:

  mkdir build
  cd build
  cmake ..
  make
  sudo make install

You can skip the "make install" step and run qarv from the build
directory directly, although there might be problems with localization
and icon loading.


LICENSING INFORMATION
---------------------

qarv is provided under the GNU General Public License, version 3 or
later. See COPYING for more information.

The icons included with qarv are part of the oxygen theme from the KDE
project (www.kde.org). See res/icons/COPYING for licensing
information.

The qarv icon itself is derived from the oxygen theme as well.

Copyright 2012 Jure Varlec
